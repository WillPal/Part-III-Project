#######################################
#### Validation Step - sc-traces ######
#######################################

##############################
#### Recreating landmark genes

####################
#### For 50 sections

assigned.cells <- landmark.cells[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cells)[ncol(assigned.cells)] <- "Max"
assigned.cells <- assigned.cells[order(assigned.cells$Max, decreasing = F),]
assigned.cells <- cbind(assigned.cells,ceiling(assigned.cells$Max/2))
colnames(assigned.cells)[ncol(assigned.cells)] <- "Section"
assigned.cells$Section %>% as.factor() %>% table() %>% barplot
assigned.cells <- assigned.cells[,-(ncol(assigned.cells)-1)]

### sc-traces for 50 sections
cell.traces <- matrix(NA,nrow=max(assigned.cells$Section),ncol=(ncol(assigned.cells)-1))
for (i in 1:max(assigned.cells$Section)){
  temp <- dplyr::filter(assigned.cells, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.traces[i,] <- temp
}
colnames(cell.traces) <- colnames(assigned.cells)[-(ncol(assigned.cells))]
rownames(cell.traces) <- 1:nrow(cell.traces)

tomo <- landmark.Ebar %>% t() %>% cbind(Section = ceiling(1:100/2))
tomo.traces <- matrix(NA,nrow=max(tomo[,ncol(tomo)]),ncol=(ncol(tomo)-1))
for (i in 1:max(tomo[,ncol(tomo)])){
  temp <- tomo[tomo[,ncol(tomo)]==i,]
  tomo.traces[i,] <- apply(temp[,-(ncol(tomo))],2,mean)
}

### Correlation comparisons for each landmark gene
score <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  score <- c(score, cor(tomo.traces[,i],cell.traces[,i]))
}
summary(score)
score50 <- score

####################
#### For 25 Sections

assigned.cells <- landmark.cells[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cells)[ncol(assigned.cells)] <- "Max"
assigned.cells <- assigned.cells[order(assigned.cells$Max, decreasing = F),]
assigned.cells <- cbind(assigned.cells,ceiling(assigned.cells$Max/4))
colnames(assigned.cells)[ncol(assigned.cells)] <- "Section"
assigned.cells$Section %>% as.factor() %>% table() %>% barplot
assigned.cells <- assigned.cells[,-(ncol(assigned.cells)-1)]

### sc-traces for 25 sections
cell.traces <- matrix(NA,nrow=max(assigned.cells$Section),ncol=(ncol(assigned.cells)-1))
for (i in 1:max(assigned.cells$Section)){
  temp <- dplyr::filter(assigned.cells, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.traces[i,] <- temp
}
colnames(cell.traces) <- colnames(assigned.cells)[-(ncol(assigned.cells))]
rownames(cell.traces) <- 1:nrow(cell.traces)

tomo <- landmark.Ebar %>% t() %>% cbind(Section = ceiling(1:100/4))
tomo.traces <- matrix(NA,nrow=max(tomo[,ncol(tomo)]),ncol=(ncol(tomo)-1))
for (i in 1:max(tomo[,ncol(tomo)])){
  temp <- tomo[tomo[,ncol(tomo)]==i,]
  tomo.traces[i,] <- apply(temp[,-(ncol(tomo))],2,mean)
}

### Correlation comparisons for each landmark gene
score <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  score <- c(score, cor(tomo.traces[,i],cell.traces[,i]))
}
summary(score)
score25 <- score

#####################
#### For 100 Sections
assigned.cells <- landmark.cells[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cells)[ncol(assigned.cells)] <- "Max"
assigned.cells <- assigned.cells[order(assigned.cells$Max, decreasing = F),]
assigned.cells <- cbind(assigned.cells,ceiling(assigned.cells$Max/1))
colnames(assigned.cells)[ncol(assigned.cells)] <- "Section"
assigned.cells$Section %>% as.factor() %>% table() %>% barplot
assigned.cells <- assigned.cells[,-(ncol(assigned.cells)-1)]
cell.traces <- matrix(NA,nrow=max(assigned.cells$Section),ncol=(ncol(assigned.cells)-1))
for (i in 1:max(assigned.cells$Section)){
  temp <- dplyr::filter(assigned.cells, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.traces[i,] <- temp
}
colnames(cell.traces) <- colnames(assigned.cells)[-(ncol(assigned.cells))]
rownames(cell.traces) <- 1:nrow(cell.traces)

tomo.traces <- landmark.Ebar %>% t()

#### Correlation comparisons for each landmark gene
score <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  score <- c(score, cor(tomo.traces[,i],cell.traces[,i]))
}
summary(score)
score100 <- score


#######################################
###### Exploring the non-landmark genes
non_landmark <- c()
for (i in 1:max(dat$Class)){
  X <- dat %>%
    rownames_to_column("ensembl") %>%
    dplyr::filter(Class == i) %>% 
    column_to_rownames("ensembl")
  X <- X[,-101]
  pcDat <- prcomp(t(X))
  top <- abs(pcDat$rotation)
  rownames(top) <- 1:nrow(top)
  top <- top[order(top[,1], decreasing = T),]
  non_landmark <- c(non_landmark, rownames(X)[
    as.numeric(rownames(top)[9:13])]) ### Selecting genes not chosen as landmark genes
}
non_landmark <- non_landmark[!is.na(non_landmark)]
#Number of gene names per cluster can be changed by changing the number in rownames(top)[...]

##### Recreating the moving averaged TOMO-seq embryos for non-landmark genes (similar to Positional Information script)
E1 <- t2h.adj[rownames(t2h.adj) %in% non_landmark,]
E1 <- t(movingAverageByCol(t(E1), width = 3, full.length = TRUE))
colnames(E1) <- 1:100
E2 <- h2t.adj[rownames(h2t.adj) %in% non_landmark,]
E2 <- t(movingAverageByCol(t(E2), width = 3, full.length = TRUE))
colnames(E2) <- 1:100
E3 <- t2h2.adj[rownames(t2h2.adj) %in% non_landmark,]
E3 <- t(movingAverageByCol(t(E3), width = 3, full.length = TRUE))
colnames(E3) <- 1:100
#### Average embryo for non-landmark genes
E1.1 <- rownames_to_column(as.data.frame(E1), "ensembl")
E2.1 <- rownames_to_column(as.data.frame(E2), "ensembl")
E3.1 <- rownames_to_column(as.data.frame(E3), "ensembl")
E.all <- rbind(E1.1,E2.1,E3.1)
E.barN <- matrix(NA,ncol=100,nrow=length(non_landmark))
for (i in 1:length(non_landmark)){
  temp <- E.all %>% 
    dplyr::filter(ensembl == non_landmark[i])
  temp <- temp[,-1] %>% 
    apply(2,mean)
  E.barN[i,] <- temp
}
rownames(E.barN) <- non_landmark
E.barN <- as.data.frame(E.barN)
### Ordering the rownames
E1 <- rownames_to_column(as.data.frame(E1), "ensembl")
E1[,"ensembl"] <- as.factor(E1[,"ensembl"])
E1 <- E1[order(E1[,"ensembl"]),]
rownames(E1) <- E1$ensembl
E1 <- E1[,-1]
E2 <- rownames_to_column(as.data.frame(E2), "ensembl")
E2[,"ensembl"] <- as.factor(E2[,"ensembl"])
E2 <- E2[order(E2[,"ensembl"]),]
rownames(E2) <- E2$ensembl
E2 <- E2[,-1]
E3 <- rownames_to_column(as.data.frame(E3), "ensembl")
E3[,"ensembl"] <- as.factor(E3[,"ensembl"])
E3 <- E3[order(E3[,"ensembl"]),]
rownames(E3) <- E3$ensembl
E3 <- E3[,-1]
E.barN <- rownames_to_column(as.data.frame(E.barN), "ensembl")
E.barN[,"ensembl"] <- as.factor(E.barN[,"ensembl"])
E.barN <- E.barN[order(E.barN[,"ensembl"]),]
rownames(E.barN) <- E.barN$ensembl
E.barN <- E.barN[,-1]
colnames(E.barN) <- 1:100

landmark.cellsN <- cells[cells$ensembl %in% rownames(E.barN),] 
landmark.cellsN <- landmark.cellsN[order(landmark.cellsN$ensembl),]
landmark.cellsN$ensembl <- as.character(landmark.cellsN$ensembl)
rownames(landmark.cellsN) <- NULL
landmark.cellsN <- column_to_rownames(landmark.cellsN, "ensembl")
landmark.EbarN <- E.barN
landmark.EbarN <- as.matrix(landmark.EbarN)

############################## 
#### Recreating traces

##############################
#### 50 sections
assigned.cellsN <- landmark.cellsN[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Max"
assigned.cellsN <- assigned.cellsN[order(assigned.cellsN$Max, decreasing = F),]
assigned.cellsN <- cbind(assigned.cellsN,ceiling(assigned.cellsN$Max/2))
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Section"
assigned.cellsN$Section %>% as.factor() %>% table() %>% barplot
assigned.cellsN <- assigned.cellsN[,-(ncol(assigned.cellsN)-1)]

cell.tracesN <- matrix(NA,nrow=max(assigned.cellsN$Section),ncol=(ncol(assigned.cellsN)-1))
for (i in 1:max(assigned.cellsN$Section)){
  temp <- dplyr::filter(assigned.cellsN, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.tracesN[i,] <- temp
}
colnames(cell.tracesN) <- colnames(assigned.cellsN)[-(ncol(assigned.cellsN))]
rownames(cell.tracesN) <- 1:nrow(cell.tracesN)

tomo <- E.barN %>% t() %>% cbind(Section = ceiling(1:100/2))
tomo.traces <- matrix(NA,nrow=max(tomo[,ncol(tomo)]),ncol=(ncol(tomo)-1))
for (i in 1:max(tomo[,ncol(tomo)])){
  temp <- tomo[tomo[,ncol(tomo)]==i,]
  tomo.traces[i,] <- apply(temp[,-(ncol(tomo))],2,mean)
}

#### Correlation comparisons for each non-landmark gene
scoreN <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  scoreN <- c(scoreN, cor(tomo.traces[,i],cell.tracesN[,i]))
}
summary(scoreN)
scoreN50 <- scoreN

################
#### 25 Sections 
assigned.cellsN <- landmark.cellsN[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Max"
assigned.cellsN <- assigned.cellsN[order(assigned.cellsN$Max, decreasing = F),]
assigned.cellsN <- cbind(assigned.cellsN,ceiling(assigned.cellsN$Max/4))
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Section"
assigned.cellsN$Section %>% as.factor() %>% table() %>% barplot
assigned.cellsN <- assigned.cellsN[,-(ncol(assigned.cellsN)-1)]

cell.tracesN <- matrix(NA,nrow=max(assigned.cellsN$Section),ncol=(ncol(assigned.cellsN)-1))
for (i in 1:max(assigned.cellsN$Section)){
  temp <- dplyr::filter(assigned.cellsN, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.tracesN[i,] <- temp
}
colnames(cell.tracesN) <- colnames(assigned.cellsN)[-(ncol(assigned.cellsN))]
rownames(cell.tracesN) <- 1:nrow(cell.tracesN)

tomo <- E.barN %>% t() %>% cbind(Section = ceiling(1:100/4))
tomo.traces <- matrix(NA,nrow=max(tomo[,ncol(tomo)]),ncol=(ncol(tomo)-1))
for (i in 1:max(tomo[,ncol(tomo)])){
  temp <- tomo[tomo[,ncol(tomo)]==i,]
  tomo.traces[i,] <- apply(temp[,-(ncol(tomo))],2,mean)
}

#### Correlation comparisons for each non-landmark gene
scoreN <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  scoreN <- c(scoreN, cor(tomo.traces[,i],cell.tracesN[,i]))
}
summary(scoreN)
scoreN25 <- scoreN

#####################
#### For 100 Sections
assigned.cellsN <- landmark.cellsN[,rownames(RCC.Cells)] %>% t() %>% cbind(max.col(RCC.Cells)) %>% as.data.frame()
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Max"
assigned.cellsN <- assigned.cellsN[order(assigned.cellsN$Max, decreasing = F),]
assigned.cellsN <- cbind(assigned.cellsN,ceiling(assigned.cellsN$Max/1))
colnames(assigned.cellsN)[ncol(assigned.cellsN)] <- "Section"
assigned.cellsN$Section %>% as.factor() %>% table() %>% barplot
assigned.cellsN <- assigned.cellsN[,-(ncol(assigned.cellsN)-1)]

cell.tracesN <- matrix(NA,nrow=max(test$Section),ncol=(ncol(test)-1))
for (i in 1:max(test$Section)){
  temp <- dplyr::filter(test, Section == i)
  temp <- apply(temp[,1:(ncol(temp)-1)],2,mean, na.rm=TRUE)
  cell.tracesN[i,] <- temp
}
colnames(cell.tracesN) <- colnames(test)[-(ncol(test))]
rownames(cell.tracesN) <- 1:nrow(cell.tracesN)

tomo.traces <- E.barN %>% t() 

scoreN <- c()
par(mfrow=c(2,2))
for (i in 1:ncol(tomo.traces)){
  scoreN <- c(scoreN, cor(tomo.traces[,i],cell.tracesN[,i]))
}
summary(scoreN)
scoreN100 <- scoreN


##################################################
### Boxplotting
class <- c(rep("100 Sections, LM",times=48),rep("50 Sections, LM",times=48),
           rep("25 Sections, LM",times=48),
           rep("100 Sections, NLM",times=26), rep("50 Sections, NLM",times=26),
           rep("25 Sections, NLM",times=26))
class <- factor(class, levels = c("100 Sections, LM","50 Sections, LM",
                                  "25 Sections, LM",
                                  "100 Sections, NLM","50 Sections, NLM",
                                  "25 Sections, NLM"))
boxplott <- data.frame(Correlation = c(score100,score50,score25,scoreN100,scoreN50,scoreN25), Class = class)

boxplott %>% ggplot(aes(x=Class,y=Correlation)) + geom_boxplot(size = 1, outlier.size = 2,
                                                               fill = c("violetred2","orange1","darkcyan",
                                                                        "violetred2","orange1","darkcyan"))+ 
  theme_bw() + theme(text = element_text(size = 30), 
                     panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
  ylim(-0.5,1) + ylab("Correlation Score") + xlab("") + geom_hline(yintercept=0, size = 1,
                                                                   linetype="dashed")
